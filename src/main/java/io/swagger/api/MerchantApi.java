/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.InlineResponse200;
import io.swagger.model.InlineResponse400;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-07-27T13:42:32.904Z")

@Api(value = "merchant", description = "the merchant API")
public interface MerchantApi {

    @ApiOperation(value = "Merchant location search.", notes = "Provides public search query features for merchant locations.", response = InlineResponse200.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Status 200", response = InlineResponse200.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Status 400", response = InlineResponse400.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Returned for any server-side failure.", response = Void.class) })
    
    @RequestMapping(value = "/merchant/location",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<InlineResponse200>> merchantLocationGet( @NotNull@ApiParam(value = "If true, omit the contact information from returned locations.", required = true, defaultValue = "false") @RequestParam(value = "omitContactInfo", required = true, defaultValue="false") Boolean omitContactInfo, @Min(1) @Max(100)@ApiParam(value = "The maximum number of locations to return for a single query.", defaultValue = "10") @RequestParam(value = "maximumResults", required = false, defaultValue="10") Integer maximumResults,@ApiParam(value = "Identify and sort merchants or locations for which the search text offers approximate matches.") @RequestParam(value = "searchText", required = false) String searchText,@ApiParam(value = "Limits results to a region with its center specified by the given GPS latitude.") @RequestParam(value = "latitude", required = false) Double latitude,@ApiParam(value = "Limits results to a region with its center specified by the given GPS longitude.") @RequestParam(value = "longitude", required = false) Double longitude, @Min(100) @Max(100000)@ApiParam(value = "Radius of the search area in meters.", defaultValue = "50000") @RequestParam(value = "searchRadius", required = false, defaultValue="50000") Integer searchRadius,@ApiParam(value = "If true, omit the list of supported consumer features from the returned locations.", defaultValue = "false") @RequestParam(value = "omitConsumerFeatures", required = false, defaultValue="false") Boolean omitConsumerFeatures,@ApiParam(value = "If true, omit the merchant information from returned locations.", defaultValue = "false") @RequestParam(value = "omitMerchantInfo", required = false, defaultValue="false") Boolean omitMerchantInfo);

}
